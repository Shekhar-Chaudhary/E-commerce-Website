[{"D:\\My Files\\Project\\E-commerce\\e-commerce-app\\src\\index.js":"1","D:\\My Files\\Project\\E-commerce\\e-commerce-app\\src\\App.js":"2","D:\\My Files\\Project\\E-commerce\\e-commerce-app\\src\\reportWebVitals.js":"3","D:\\My Files\\Project\\E-commerce\\e-commerce-app\\src\\Components\\Header\\Header.js":"4","D:\\My Files\\Project\\E-commerce\\e-commerce-app\\src\\Components\\Login\\Login.js":"5","D:\\My Files\\Project\\E-commerce\\e-commerce-app\\src\\Components\\Register\\Register.js":"6","D:\\My Files\\Project\\E-commerce\\e-commerce-app\\src\\Components\\Register\\RegisterForm.js":"7","D:\\My Files\\Project\\E-commerce\\e-commerce-app\\src\\Components\\Login\\LoginForm.js":"8","D:\\My Files\\Project\\E-commerce\\e-commerce-app\\src\\Components\\Footer\\Footer.js":"9","D:\\My Files\\Project\\E-commerce\\e-commerce-app\\src\\screens\\HomeScreen.js":"10","D:\\My Files\\Project\\E-commerce\\e-commerce-app\\src\\products.js":"11","D:\\My Files\\Project\\E-commerce\\e-commerce-app\\src\\Components\\Product\\Product.js":"12","D:\\My Files\\Project\\E-commerce\\e-commerce-app\\src\\Components\\Rating\\Rating.js":"13","D:\\My Files\\Project\\E-commerce\\e-commerce-app\\src\\screens\\ProductScreen.js":"14"},{"size":671,"mtime":1665127529190,"results":"15","hashOfConfig":"16"},{"size":677,"mtime":1665395416458,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1665043976206,"results":"18","hashOfConfig":"16"},{"size":1148,"mtime":1665394048434,"results":"19","hashOfConfig":"16"},{"size":2463,"mtime":1665140551323,"results":"20","hashOfConfig":"16"},{"size":2501,"mtime":1665140151334,"results":"21","hashOfConfig":"16"},{"size":3736,"mtime":1665140889085,"results":"22","hashOfConfig":"16"},{"size":1731,"mtime":1665140416163,"results":"23","hashOfConfig":"16"},{"size":336,"mtime":1665384155059,"results":"24","hashOfConfig":"16"},{"size":476,"mtime":1665392839770,"results":"25","hashOfConfig":"16"},{"size":2486,"mtime":1665397699396,"results":"26","hashOfConfig":"16"},{"size":892,"mtime":1665393813240,"results":"27","hashOfConfig":"16"},{"size":1864,"mtime":1665392697843,"results":"28","hashOfConfig":"16"},{"size":2539,"mtime":1665397740918,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"ypyvo4",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"33"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"33"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\My Files\\Project\\E-commerce\\e-commerce-app\\src\\index.js",[],[],[],"D:\\My Files\\Project\\E-commerce\\e-commerce-app\\src\\App.js",["76"],[],"D:\\My Files\\Project\\E-commerce\\e-commerce-app\\src\\reportWebVitals.js",[],[],"D:\\My Files\\Project\\E-commerce\\e-commerce-app\\src\\Components\\Header\\Header.js",["77"],[],"D:\\My Files\\Project\\E-commerce\\e-commerce-app\\src\\Components\\Login\\Login.js",["78","79"],[],"\r\n\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport \"../../App.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport LoginForm from \"./LoginForm\";\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const LoginSchema = Yup.object().shape({\r\n    email: Yup.string().email(\"Invalid email\").required(\"Email is required.\"),\r\n    password: Yup.string()\r\n      .min(8, \"Minimum 8 characters required\")\r\n      .required(\"Password is required.\"),\r\n  });\r\n\r\n  const loginHandler = (data) => {\r\n    localStorage.setItem(\"login\", true);\r\n\r\n    const getUserData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    console.log(getUserData);\r\n\r\n    if(!getUserData) {\r\n      toast.error(\"User is not registered!\");\r\n      return;\r\n    }\r\n    \r\n    if (\r\n      getUserData.email === data.email &&\r\n      getUserData.password === data.password\r\n    ) {\r\n      console.log(\"Logged in successfully....\");\r\n      navigate(\"/home\");\r\n    } else  {\r\n      toast.error(\"Invalid Credentials\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\" login-page\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 px-0 d-none d-sm-block\">\r\n              <img\r\n                src=\"https://t3.ftcdn.net/jpg/02/24/86/92/360_F_224869243_WZHOVD3GqYq6ZUzRkZbQNTXzg1FzHwhd.jpg\"\r\n                alt=\"Login image\"\r\n                className=\"w-100  login-img img-fluid mt-5\"\r\n              />\r\n            </div>\r\n            <div className=\"col-md-6 justify-content-sm-center pt-4 w-40\">\r\n              <div className=\"col-sm-12  pb-3\">\r\n                <h1 className=\"text-center pt-3 text-secondary mb-4\">Login</h1>\r\n\r\n                <Formik\r\n                  initialValues={{\r\n                    email: \"\",\r\n                    password: \"\",\r\n                  }}\r\n                  onSubmit={(value, { resetForm }) => {\r\n                    console.log(value);\r\n                    loginHandler(value);\r\n                    resetForm();\r\n                  }}\r\n                  validationSchema={LoginSchema}\r\n                  component={LoginForm}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n};\r\nexport default Login;\r\n\r\n","D:\\My Files\\Project\\E-commerce\\e-commerce-app\\src\\Components\\Register\\Register.js",["80","81","82"],[],"import { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport \"../../App.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport RegisterForm from \"./RegisterForm\";\r\n\r\nconst Register = () => {\r\n  const SignUpSchema = Yup.object().shape({\r\n    firstname: Yup.string().required(\"First Name is required.\"),\r\n    lastname: Yup.string().required(\"Last Name is required.\"),\r\n    email: Yup.string().email(\"Invalid email\").required(\"Email is required.\"),\r\n    password: Yup.string()\r\n      .min(8, \"Minimum 8 characters required\")\r\n      .required(\"Password is required.\"),\r\n    confirmpassword: Yup.string()\r\n      .required(\"Please confirm your password\")\r\n      .oneOf([Yup.ref(\"password\")], \"Passwords do not match\"),\r\n  });\r\n\r\n  \r\n\r\n  const submitHandler = (data) => {\r\n    localStorage.setItem(\"userData\", JSON.stringify(data));\r\n    toast.success(\"Account Created Successfully\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row \">\r\n            <div className=\"col-md-6 px-0 d-none d-sm-block\">\r\n              <img\r\n                src=\"https://t3.ftcdn.net/jpg/02/24/86/92/360_F_224869243_WZHOVD3GqYq6ZUzRkZbQNTXzg1FzHwhd.jpg\"\r\n                alt=\"Login image\"\r\n                className=\"w-100 signup-img img-fluid mt-5\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"col-md-6 justify-content-sm-center pt-1\">\r\n              <div className=\"col-sm-12\">\r\n                <h3 className=\"text-center pt-3 text-secondary\">\r\n                  CREATE AN ACCOUNT\r\n                </h3>\r\n                <hr />\r\n                <Formik\r\n                  initialValues={{\r\n                    firstname: \"\",\r\n                    lastname: \"\",\r\n                    email: \"\",\r\n                    password: \"\",\r\n                    confirmpassword: \"\",\r\n                  }}\r\n                  onSubmit={(value, { resetForm }) => {\r\n                    console.log(value);\r\n                    submitHandler(value);\r\n                    resetForm();\r\n                  }}\r\n                  validationSchema={SignUpSchema}\r\n                  component={RegisterForm}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n};\r\nexport default Register;\r\n","D:\\My Files\\Project\\E-commerce\\e-commerce-app\\src\\Components\\Register\\RegisterForm.js",[],[],"D:\\My Files\\Project\\E-commerce\\e-commerce-app\\src\\Components\\Login\\LoginForm.js",["83"],[],"import { Form, Field } from \"formik\";\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst LoginForm = ({ errors, touched, isValid, dirty }) => {\r\n  return (\r\n    <>\r\n      <Form className=\"p-2 login-form mx-auto\">\r\n        <div className=\"mb-3 \">\r\n          <label for=\"exampleInputEmail1\" className=\"form-label\">\r\n            Email :\r\n          </label>\r\n          <Field\r\n            type=\"email\"\r\n            name=\"email\"\r\n            className={\r\n              touched.email\r\n                ? `form-control ${errors.email ? \"invalid\" : \"valid\"}`\r\n                : `form-control`\r\n            }\r\n          />\r\n          {touched.email && errors.email && (\r\n            <small className=\"text-danger\">{errors.email}</small>\r\n          )}\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label for=\"exampleInputPassword1\" className=\"form-label\">\r\n            Password :\r\n          </label>\r\n          <Field\r\n            type=\"password\"\r\n            name=\"password\"\r\n            className={\r\n              touched.password\r\n                ? `form-control ${errors.password ? \"invalid\" : \"valid\"}`\r\n                : `form-control`\r\n            }\r\n          />\r\n          {touched.password && errors.password && (\r\n            <small className=\"text-danger\">{errors.password}</small>\r\n          )}\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-primary w-100\"\r\n          disabled={!isValid || !dirty}\r\n        >\r\n          Submit\r\n        </button>\r\n        <p className=\"mt-3\">Don't have an account? \r\n          <NavLink to=\"/register\"><a className=\"link-info ms-1\">Register here</a></NavLink>\r\n        </p>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","D:\\My Files\\Project\\E-commerce\\e-commerce-app\\src\\Components\\Footer\\Footer.js",[],[],"D:\\My Files\\Project\\E-commerce\\e-commerce-app\\src\\screens\\HomeScreen.js",[],[],"D:\\My Files\\Project\\E-commerce\\e-commerce-app\\src\\products.js",[],[],"D:\\My Files\\Project\\E-commerce\\e-commerce-app\\src\\Components\\Product\\Product.js",[],[],"D:\\My Files\\Project\\E-commerce\\e-commerce-app\\src\\Components\\Rating\\Rating.js",[],[],"D:\\My Files\\Project\\E-commerce\\e-commerce-app\\src\\screens\\ProductScreen.js",[],[],{"ruleId":"84","severity":1,"message":"85","line":2,"column":17,"nodeType":"86","messageId":"87","endLine":2,"endColumn":23},{"ruleId":"84","severity":1,"message":"88","line":1,"column":23,"nodeType":"86","messageId":"87","endLine":1,"endColumn":34},{"ruleId":"84","severity":1,"message":"89","line":8,"column":10,"nodeType":"86","messageId":"87","endLine":8,"endColumn":19},{"ruleId":"90","severity":1,"message":"91","line":50,"column":15,"nodeType":"92","endLine":54,"endColumn":17},{"ruleId":"84","severity":1,"message":"89","line":6,"column":10,"nodeType":"86","messageId":"87","endLine":6,"endColumn":19},{"ruleId":"84","severity":1,"message":"93","line":7,"column":10,"nodeType":"86","messageId":"87","endLine":7,"endColumn":21},{"ruleId":"90","severity":1,"message":"91","line":36,"column":15,"nodeType":"92","endLine":40,"endColumn":17},{"ruleId":"94","severity":1,"message":"95","line":51,"column":35,"nodeType":"92","endLine":51,"endColumn":65},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'NavDropdown' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'useNavigate' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md"]