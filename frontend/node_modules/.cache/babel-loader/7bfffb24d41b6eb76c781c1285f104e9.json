{"ast":null,"code":"var _jsxFileName = \"D:\\\\My Files\\\\Project\\\\E-commerce\\\\e-commerce-app\\\\src\\\\Components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\n// const Login = () => {\n// return (\n// <>\n{\n  /* <button\r\n   type=\"button\"\r\n   class=\"btn btn-primary\"\r\n   data-bs-toggle=\"modal\"\r\n   data-bs-target=\"#exampleModal\"\r\n  >\r\n   Launch demo modal\r\n  </button>\r\n   <div\r\n   class=\"modal fade\"\r\n   id=\"exampleModal\"\r\n   tabindex=\"-1\"\r\n   aria-labelledby=\"exampleModalLabel\"\r\n   aria-hidden=\"true\"\r\n  >\r\n   <div class=\"modal-dialog\">\r\n     <div class=\"modal-content\">\r\n       <div class=\"modal-header\">\r\n         <h5 class=\"modal-title text-center mx-auto\" id=\"exampleModalLabel\">\r\n           Login\r\n         </h5>\r\n         <button\r\n           type=\"button\"\r\n           class=\"btn-close\"\r\n           data-bs-dismiss=\"modal\"\r\n           aria-label=\"Close\"\r\n         ></button>\r\n       </div>\r\n       <div class=\"modal-body\">\r\n         <div className=\"\">\r\n           <div className=\"card-body\">\r\n             <form className=\"\">\r\n               <div className=\"mb-3\">\r\n                 <label for=\"exampleInputEmail1\" className=\"form-label\">\r\n                   Email address\r\n                 </label>\r\n                 <input\r\n                   type=\"email\"\r\n                   className=\"form-control\"\r\n                   id=\"exampleInputEmail1\"\r\n                   aria-describedby=\"emailHelp\"\r\n                 />\r\n               </div>\r\n               <div className=\"mb-3\">\r\n                 <label for=\"exampleInputPassword1\" className=\"form-label\">\r\n                   Password\r\n                 </label>\r\n                 <input\r\n                   type=\"password\"\r\n                   className=\"form-control\"\r\n                   id=\"exampleInputPassword1\"\r\n                 />\r\n               </div>\r\n             </form>\r\n           </div>\r\n         </div>\r\n       </div>\r\n       <div class=\"modal-footer\">\r\n         <button\r\n           type=\"button\"\r\n           class=\"btn btn-secondary\"\r\n           data-bs-dismiss=\"modal\"\r\n         >\r\n           Close\r\n         </button>\r\n           <button type=\"submit\" className=\"btn btn-primary\">\r\n           Submit\r\n         </button>\r\n       </div>\r\n     </div>\r\n   </div>\r\n  </div> */\n} // </>\n// );\n// };\n// export default Login;\n\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"../../App.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport LoginForm from \"./LoginForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const LoginSchema = Yup.object().shape({\n    email: Yup.string().email(\"Invalid email\").required(\"Email is required.\"),\n    password: Yup.string().min(8, \"Minimum 8 characters required\").required(\"Password is required.\")\n  });\n\n  const loginHandler = data => {\n    localStorage.setItem(\"login\", true);\n    const getUserData = JSON.parse(localStorage.getItem(\"userData\"));\n    console.log(getUserData);\n\n    if (!getUserData) {\n      toast.error(\"User is not registered!\");\n      return;\n    }\n\n    if (getUserData.email === data.email && getUserData.password === data.password) {\n      console.log(\"Logged in successfully....\");\n      navigate(\"/dashboard\");\n    } else {\n      toast.error(\"Invalid Credentials\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" login-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 px-0 d-none d-sm-block\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://t3.ftcdn.net/jpg/02/24/86/92/360_F_224869243_WZHOVD3GqYq6ZUzRkZbQNTXzg1FzHwhd.jpg\",\n              alt: \"Login image\",\n              className: \"w-100  login-img img-fluid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 justify-content-sm-center pt-4 w-40\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-12  pb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"text-center pt-3 text-secondary mb-4\",\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Formik, {\n                initialValues: {\n                  email: \"\",\n                  password: \"\"\n                },\n                onSubmit: (value, _ref) => {\n                  let {\n                    resetForm\n                  } = _ref;\n                  console.log(value);\n                  loginHandler(value);\n                  resetForm();\n                },\n                validationSchema: LoginSchema,\n                component: LoginForm\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Login, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Formik","Yup","ToastContainer","toast","useEffect","useNavigate","LoginForm","Login","navigate","LoginSchema","object","shape","email","string","required","password","min","loginHandler","data","localStorage","setItem","getUserData","JSON","parse","getItem","console","log","error","value","resetForm"],"sources":["D:/My Files/Project/E-commerce/e-commerce-app/src/Components/Login/Login.js"],"sourcesContent":["// const Login = () => {\r\n  // return (\r\n    // <>\r\n      {/* <button\r\n        type=\"button\"\r\n        class=\"btn btn-primary\"\r\n        data-bs-toggle=\"modal\"\r\n        data-bs-target=\"#exampleModal\"\r\n      >\r\n        Launch demo modal\r\n      </button>\r\n\r\n      <div\r\n        class=\"modal fade\"\r\n        id=\"exampleModal\"\r\n        tabindex=\"-1\"\r\n        aria-labelledby=\"exampleModalLabel\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div class=\"modal-dialog\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title text-center mx-auto\" id=\"exampleModalLabel\">\r\n                Login\r\n              </h5>\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn-close\"\r\n                data-bs-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              <div className=\"\">\r\n                <div className=\"card-body\">\r\n                  <form className=\"\">\r\n                    <div className=\"mb-3\">\r\n                      <label for=\"exampleInputEmail1\" className=\"form-label\">\r\n                        Email address\r\n                      </label>\r\n                      <input\r\n                        type=\"email\"\r\n                        className=\"form-control\"\r\n                        id=\"exampleInputEmail1\"\r\n                        aria-describedby=\"emailHelp\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                      <label for=\"exampleInputPassword1\" className=\"form-label\">\r\n                        Password\r\n                      </label>\r\n                      <input\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        id=\"exampleInputPassword1\"\r\n                      />\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-secondary\"\r\n                data-bs-dismiss=\"modal\"\r\n              >\r\n                Close\r\n              </button>\r\n\r\n              <button type=\"submit\" className=\"btn btn-primary\">\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n    // </>\r\n  // );\r\n// };\r\n\r\n// export default Login;\r\n\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport \"../../App.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport LoginForm from \"./LoginForm\";\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const LoginSchema = Yup.object().shape({\r\n    email: Yup.string().email(\"Invalid email\").required(\"Email is required.\"),\r\n    password: Yup.string()\r\n      .min(8, \"Minimum 8 characters required\")\r\n      .required(\"Password is required.\"),\r\n  });\r\n\r\n  const loginHandler = (data) => {\r\n    localStorage.setItem(\"login\", true);\r\n\r\n    const getUserData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    console.log(getUserData);\r\n\r\n    if(!getUserData) {\r\n      toast.error(\"User is not registered!\");\r\n      return;\r\n    }\r\n    \r\n    if (\r\n      getUserData.email === data.email &&\r\n      getUserData.password === data.password\r\n    ) {\r\n      console.log(\"Logged in successfully....\");\r\n      navigate(\"/dashboard\");\r\n    } else  {\r\n      toast.error(\"Invalid Credentials\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\" login-page\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 px-0 d-none d-sm-block\">\r\n              <img\r\n                src=\"https://t3.ftcdn.net/jpg/02/24/86/92/360_F_224869243_WZHOVD3GqYq6ZUzRkZbQNTXzg1FzHwhd.jpg\"\r\n                alt=\"Login image\"\r\n                className=\"w-100  login-img img-fluid\"\r\n              />\r\n            </div>\r\n            <div className=\"col-md-6 justify-content-sm-center pt-4 w-40\">\r\n              <div className=\"col-sm-12  pb-3\">\r\n                <h1 className=\"text-center pt-3 text-secondary mb-4\">Login</h1>\r\n\r\n                <Formik\r\n                  initialValues={{\r\n                    email: \"\",\r\n                    password: \"\",\r\n                  }}\r\n                  onSubmit={(value, { resetForm }) => {\r\n                    console.log(value);\r\n                    loginHandler(value);\r\n                    resetForm();\r\n                  }}\r\n                  validationSchema={LoginSchema}\r\n                  component={LoginForm}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n};\r\nexport default Login;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}