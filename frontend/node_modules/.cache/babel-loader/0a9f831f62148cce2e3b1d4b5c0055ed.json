{"ast":null,"code":"var _jsxFileName = \"D:\\\\My Files\\\\Project\\\\E-commerce\\\\e-commerce-app\\\\src\\\\Components\\\\Register\\\\Register.js\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"../../App.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport RegisterForm from \"./RegisterForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  const SignUpSchema = Yup.object().shape({\n    firstname: Yup.string().required(\"First Name is required.\"),\n    lastname: Yup.string().required(\"Last Name is required.\"),\n    email: Yup.string().email(\"Invalid email\").required(\"Email is required.\"),\n    password: Yup.string().min(8, \"Minimum 8 characters required\").required(\"Password is required.\"),\n    confirmpassword: Yup.string().required(\"Please confirm your password\").oneOf([Yup.ref(\"password\")], \"Passwords do not match\")\n  });\n\n  const submitHandler = data => {\n    localStorage.setItem(\"userData\", JSON.stringify(data));\n    toast.success(\"Account Created Successfully\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row \",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 px-0 d-none d-sm-block\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://t3.ftcdn.net/jpg/02/24/86/92/360_F_224869243_WZHOVD3GqYq6ZUzRkZbQNTXzg1FzHwhd.jpg\",\n              alt: \"Login image\",\n              className: \"w-100 signup-img img-fluid mt-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 justify-content-sm-center pt-1\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-12\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-center pt-3 text-secondary\",\n                children: \"CREATE AN ACCOUNT\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Formik, {\n                initialValues: {\n                  firstname: \"\",\n                  lastname: \"\",\n                  email: \"\",\n                  password: \"\",\n                  confirmpassword: \"\"\n                },\n                onSubmit: (value, _ref) => {\n                  let {\n                    resetForm\n                  } = _ref;\n                  console.log(value);\n                  submitHandler(value);\n                  resetForm();\n                },\n                validationSchema: SignUpSchema,\n                component: RegisterForm\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["Formik","Yup","ToastContainer","toast","useEffect","useNavigate","RegisterForm","Register","SignUpSchema","object","shape","firstname","string","required","lastname","email","password","min","confirmpassword","oneOf","ref","submitHandler","data","localStorage","setItem","JSON","stringify","success","value","resetForm","console","log"],"sources":["D:/My Files/Project/E-commerce/e-commerce-app/src/Components/Register/Register.js"],"sourcesContent":["import { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport \"../../App.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport RegisterForm from \"./RegisterForm\";\r\n\r\nconst Register = () => {\r\n  const SignUpSchema = Yup.object().shape({\r\n    firstname: Yup.string().required(\"First Name is required.\"),\r\n    lastname: Yup.string().required(\"Last Name is required.\"),\r\n    email: Yup.string().email(\"Invalid email\").required(\"Email is required.\"),\r\n    password: Yup.string()\r\n      .min(8, \"Minimum 8 characters required\")\r\n      .required(\"Password is required.\"),\r\n    confirmpassword: Yup.string()\r\n      .required(\"Please confirm your password\")\r\n      .oneOf([Yup.ref(\"password\")], \"Passwords do not match\"),\r\n  });\r\n\r\n  \r\n\r\n  const submitHandler = (data) => {\r\n    localStorage.setItem(\"userData\", JSON.stringify(data));\r\n    toast.success(\"Account Created Successfully\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row \">\r\n            <div className=\"col-md-6 px-0 d-none d-sm-block\">\r\n              <img\r\n                src=\"https://t3.ftcdn.net/jpg/02/24/86/92/360_F_224869243_WZHOVD3GqYq6ZUzRkZbQNTXzg1FzHwhd.jpg\"\r\n                alt=\"Login image\"\r\n                className=\"w-100 signup-img img-fluid mt-5\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"col-md-6 justify-content-sm-center pt-1\">\r\n              <div className=\"col-sm-12\">\r\n                <h3 className=\"text-center pt-3 text-secondary\">\r\n                  CREATE AN ACCOUNT\r\n                </h3>\r\n                <hr />\r\n                <Formik\r\n                  initialValues={{\r\n                    firstname: \"\",\r\n                    lastname: \"\",\r\n                    email: \"\",\r\n                    password: \"\",\r\n                    confirmpassword: \"\",\r\n                  }}\r\n                  onSubmit={(value, { resetForm }) => {\r\n                    console.log(value);\r\n                    submitHandler(value);\r\n                    resetForm();\r\n                  }}\r\n                  validationSchema={SignUpSchema}\r\n                  component={RegisterForm}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n};\r\nexport default Register;\r\n"],"mappings":";AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAO,eAAP;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EACrB,MAAMC,YAAY,GAAGP,GAAG,CAACQ,MAAJ,GAAaC,KAAb,CAAmB;IACtCC,SAAS,EAAEV,GAAG,CAACW,MAAJ,GAAaC,QAAb,CAAsB,yBAAtB,CAD2B;IAEtCC,QAAQ,EAAEb,GAAG,CAACW,MAAJ,GAAaC,QAAb,CAAsB,wBAAtB,CAF4B;IAGtCE,KAAK,EAAEd,GAAG,CAACW,MAAJ,GAAaG,KAAb,CAAmB,eAAnB,EAAoCF,QAApC,CAA6C,oBAA7C,CAH+B;IAItCG,QAAQ,EAAEf,GAAG,CAACW,MAAJ,GACPK,GADO,CACH,CADG,EACA,+BADA,EAEPJ,QAFO,CAEE,uBAFF,CAJ4B;IAOtCK,eAAe,EAAEjB,GAAG,CAACW,MAAJ,GACdC,QADc,CACL,8BADK,EAEdM,KAFc,CAER,CAAClB,GAAG,CAACmB,GAAJ,CAAQ,UAAR,CAAD,CAFQ,EAEe,wBAFf;EAPqB,CAAnB,CAArB;;EAcA,MAAMC,aAAa,GAAIC,IAAD,IAAU;IAC9BC,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAjC;IACAnB,KAAK,CAACwB,OAAN,CAAc,8BAAd;EACD,CAHD;;EAKA,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,EAAf;MAAA,uBACE;QAAK,SAAS,EAAC,iBAAf;QAAA,uBACE;UAAK,SAAS,EAAC,MAAf;UAAA,wBACE;YAAK,SAAS,EAAC,iCAAf;YAAA,uBACE;cACE,GAAG,EAAC,2FADN;cAEE,GAAG,EAAC,aAFN;cAGE,SAAS,EAAC;YAHZ;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QADF,eASE;YAAK,SAAS,EAAC,yCAAf;YAAA,uBACE;cAAK,SAAS,EAAC,WAAf;cAAA,wBACE;gBAAI,SAAS,EAAC,iCAAd;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADF,eAIE;gBAAA;gBAAA;gBAAA;cAAA,QAJF,eAKE,QAAC,MAAD;gBACE,aAAa,EAAE;kBACbhB,SAAS,EAAE,EADE;kBAEbG,QAAQ,EAAE,EAFG;kBAGbC,KAAK,EAAE,EAHM;kBAIbC,QAAQ,EAAE,EAJG;kBAKbE,eAAe,EAAE;gBALJ,CADjB;gBAQE,QAAQ,EAAE,CAACU,KAAD,WAA0B;kBAAA,IAAlB;oBAAEC;kBAAF,CAAkB;kBAClCC,OAAO,CAACC,GAAR,CAAYH,KAAZ;kBACAP,aAAa,CAACO,KAAD,CAAb;kBACAC,SAAS;gBACV,CAZH;gBAaE,gBAAgB,EAAErB,YAbpB;gBAcE,SAAS,EAAEF;cAdb;gBAAA;gBAAA;gBAAA;cAAA,QALF;YAAA;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QATF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAuCE,QAAC,cAAD;MAAA;MAAA;MAAA;IAAA,QAvCF;EAAA,gBADF;AA2CD,CA/DD;;KAAMC,Q;AAgEN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}